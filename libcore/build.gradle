buildscript {
  repositories {
    mavenCentral()
  }
  dependencies {
    classpath 'com.android.tools.build:gradle:2.3.0'
  }
}

apply plugin: 'com.android.library'

repositories {
  mavenCentral()
}
dependencies {
  //compile fileTree(dir: 'libs', include: '*.jar')
  compile files('./libs/HockeySDK-3.0.1.jar')
  compile files('./libs/achartengine-1.1.0.jar')
  compile files('./libs/commons-io-2.2.jar')
  compile files('./libs/twitter4j-core-3.0.5.jar')
  // NOTES on TESTING:
  // 1. run tests EITHER from Android Studio, OR from command line with "./gradlew test"
  // 2. If you try to enable hamcrest/mockito, you *WILL INTRODUCE MULTIDEX ISSUES* which crash the app
  //    ... so don't try to use them!
  // If you omit the "compile... junit" line, then the tests will fail for this reason:
  // "Error:Gradle: Execution failed for task ':compileDebugJavaWithJavac'.
  //        > Compilation failed; see the compiler error output for details."
  // http://stackoverflow.com/questions/29153737/execution-failed-for-task-tweetlanesdexdebug
  //
  // https://developer.android.com/training/testing/unit-testing/local-unit-tests.html
  // http://developer.android.com/training/testing/unit-testing/local-unit-tests.html
  // Set this dependency if you want to use Hamcrest matching
  //compile 'org.hamcrest:hamcrest-library:1.3'
  //compile 'org.mockito:mockito-core:1.10.19'
  // https://developer.android.com/training/testing/unit-testing/local-unit-tests.html
  testCompile 'junit:junit:4.+'
  // http://developer.android.com/training/testing/unit-testing/local-unit-tests.html
  // Set this dependency if you want to use Hamcrest matching
  //testCompile 'org.hamcrest:hamcrest-library:1.3'
  //testCompile 'org.mockito:mockito-core:1.10.19'
  // http://stackoverflow.com/questions/31970633/android-junit-4-library-not-recognized
  // http://blog.pivotal.io/pivotal-labs/labs/setting-up-robolectric-in-android-studio-1-1-on-os-x
  //compile 'com.android.support:support-v4:21.0.3' // required by Robolectric 2.4
  testCompile 'org.robolectric:robolectric:3.0'
  // http://robolectric.org/using-add-on-modules/
  testCompile 'org.robolectric:shadows-httpclient:3.0'
  // http://stackoverflow.com/questions/29173071/how-to-use-findviewbyid-in-robolectric
  //compile('org.robolectric:shadows-support-v4:3.0')
  //testCompile('org.robolectric:shadows-support-v4:3.0')
  //testCompile('org.robolectric:shadows-support-v4:3.0')
  //  testCompile('org.robolectric:shadows-support-v4:3.0') {
  //    exclude group: 'commons-logging', module: 'commons-logging'
  //    exclude group: 'org.apache.httpcomponents', module: 'httpclient'
  //  }
  compile 'com.facebook.android:facebook-android-sdk:3.23.0'
  compile 'com.google.android.gms:play-services:8.4.0'
  compile 'junit:junit:4.+'
  compile 'com.android.support:multidex:1.0.1'
  compile 'org.robolectric:robolectric:3.0'
  compile 'org.robolectric:shadows-httpclient:3.0'
  compile 'com.android.support:appcompat-v7:24.0.0-alpha2'
  compile 'com.google.android.gms:play-services-ads:8.4.0'
  compile 'com.google.android.gms:play-services-auth:8.4.0'
  compile 'com.google.android.gms:play-services-gcm:8.4.0'
}

android {

  // Solution for https://code.google.com/p/analytics-issues/issues/detail?id=784
  // Multiple apps using same authority provider name for AppMeasurementContentProvider
  // This is now the preferred solution from Google.
  //defaultConfig.applicationId = "com.samknows.SKMobileApp"

  compileSdkVersion 25
  buildToolsVersion '25.0.2'
  //  compileSdkVersion 'android-N'
  //  buildToolsVersion '24.0.0 rc3'

  // http://stackoverflow.com/questions/32153318/httpclient-wont-import-in-android-studio
  // Required if compileSdkVersion is set to 23!
  useLibrary 'org.apache.http.legacy'

  defaultConfig {
    //minSdkVersion 15
    //targetSdkVersion 15
    minSdkVersion 16
    targetSdkVersion 16
    // If this is enabled, you can run unit tests from Android Studio.
    // However, it makes the app crash at runtime!
    multiDexEnabled true
  }

  // http://stackoverflow.com/questions/20989317/multiple-dex-files-define-landroid-support-v4-accessibilityservice-accessibility
  // http://stackoverflow.com/questions/25013638/android-studio-google-jar-causing-gc-overhead-limit-exceeded-error
  dexOptions {
    preDexLibraries = false
    javaMaxHeapSize "4g"
  }

  // http://stackoverflow.com/questions/27977396/android-studio-duplicate-files-copied-in-apk-meta-inf-dependencies-when-compile
  packagingOptions {
    exclude 'META-INF/LICENSE.txt'
    exclude 'META-INF/LICENSE'
    exclude 'META-INF/NOTICE.txt'
    exclude 'META-INF/NOTICE'
    exclude 'META-INF/services/org.robolectric.internal.ShadowProvider'

    //// Strip Twitter jar, as it isn't used...
    //exclude("**/twitter4j-core-3.0.5.jar")
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
    //sourceCompatibility JavaVersion.VERSION_1_8
    //targetCompatibility JavaVersion.VERSION_1_8
  }

  lintOptions {
    abortOnError false
  }

  buildTypes {
    release {
//      signingConfig signingConfigs.release
//      debuggable false
//      zipAlignEnabled true
    }
  }

  sourceSets {
    main {
      // Using srcDir on its own will ADD the folder to the list of source folders.
      // Using srcDirs will *replace* the list of folders.
      // http://tools.android.com/tech-docs/new-build-system/user-guide
      manifest.srcFile 'AndroidManifest.xml'
      java.srcDirs = ['src']
      resources.srcDirs = ['src']
      aidl.srcDirs = ['src']
      renderscript.srcDirs = ['src']
      res.srcDirs = ['res']
      assets.srcDirs = ['assets']
    }
    test {
      java.srcDirs = ['src/test']
    }

    androidTest.setRoot('test')
//    // Move the tests to tests/java, tests/res, etc...
    //instrumentTest.setRoot('tests')

    // Move the build types to build-types/<type>
    // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
    // This moves them out of them default location under src/<type>/... which would
    // conflict with src/ being used by the main source set.
    // Adding new build types or product flavors should be accompanied
    // by a similar customization.
    debug.setRoot('build-types/debug')
    release.setRoot('build-types/release')
  }

  // The android.jar file that is used to run unit tests does not contain any actual code -
  // that is provided by the Android system image on real devices.
  // Instead, all methods throw exceptions (by default).
  // This is to make sure your unit tests only test your code and do not depend on any particular
  // behaviour of the Android platform (that you have not explicitly mocked e.g. using Mockito).
  // If that proves problematic, you can add the snippet below to your build.gradle to change this behavior:
  // We are aware that the default behavior is problematic when using classes
  // like Log or TextUtils and will evaluate possible solutions in future releases.
  testOptions {
    unitTests.returnDefaultValues = true
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
    //sourceCompatibility JavaVersion.VERSION_1_8
    //targetCompatibility JavaVersion.VERSION_1_8
  }
}
